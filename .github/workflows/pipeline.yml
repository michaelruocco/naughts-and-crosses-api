name: pipeline

on:
  push:
    branches-ignore:
      - 'naughts-and-crosses-api-*'

permissions:
  checks: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup SonarCloud Cache
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Setup Gradle Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Print Current Version
        run: ./gradlew currentVersion

      - name: Check Dependency Versions
        run: ./gradlew dependencyUpdates

      - name: Build
        run: ./gradlew clean spotlessCheck criticalLintGradle assemble

      - name: Test
        run: ./gradlew test integrationTest unitCoverage integrationCoverage

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "**/**/build/test-results/**/*.xml"

      - name: Sonar Analysis
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar

      - name: Codecov Coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./code-coverage-report/build/reports/jacoco/unitCoverage/unitCoverage.xml,./code-coverage-report/build/reports/jacoco/integrationCoverage/integrationCoverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Codacy Coverage
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_TOKEN }}
          coverage-reports: ./code-coverage-report/build/reports/jacoco/unitCoverage/unitCoverage.xml,./code-coverage-report/build/reports/jacoco/integrationCoverage/integrationCoverage.xml

      - name: Publish snapshot
        if: github.ref != 'refs/heads/master'
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          OSSRH_PGP_SECRET_KEY: ${{ secrets.OSSRH_PGP_SECRET_KEY }}
          OSSRH_PGP_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_PGP_SECRET_KEY_PASSWORD }}
        run: ./gradlew publishToSonatype

      - name: Release
        if: github.ref == 'refs/heads/master'
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          OSSRH_PGP_SECRET_KEY: ${{ secrets.OSSRH_PGP_SECRET_KEY }}
          OSSRH_PGP_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_PGP_SECRET_KEY_PASSWORD }}
        run: |
          ./gradlew release -Prelease.customUsername=${{ github.actor }} -Prelease.customPassword=${{ github.token }}
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository
          ./gradlew currentVersion
