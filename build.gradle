plugins {
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
    id "com.diffplug.spotless" version "6.23.3"
    id "com.github.ben-manes.versions" version "0.50.0"
    id "pl.allegro.tech.build.axion-release" version "1.16.1"
    id "org.sonarqube" version "4.4.1.3373"
    id "nebula.lint" version "19.0.1"
    id "com.bmuschko.docker-remote-api" version "9.4.0"
}

scmVersion {
    versionCreator "versionWithBranch"
    tag {
        prefix = "${name}-"
    }
}
project.version = scmVersion.version

subprojects {
    group "com.github.michaelruocco"

    tasks.withType(Javadoc).configureEach {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    ext {
        slf4jVersion = "2.0.9"
        lombokVersion = "1.18.30"
        postgresqlVersion = "42.7.1"
        flywayVersion = "10.3.0"
        jsonAdapterVersion = "1.0.4"
        springKafkaVersion = "3.1.0"
        springVersion = "6.1.2"

        junitVersion = "5.10.1"

        gitUrl = "https://github.com/michaelruocco/naughts-and-crosses-api"
        pomConfig = {
            licenses {
                license {
                    name "MIT License"
                    url "https://opensource.org/licenses/MIT"
                    distribution "repo"
                }
            }

            developers {
                developer {
                    id "mruoc"
                    name "Michael Ruocco"
                    email "michael.ruocco@hotmail.com"
                }
            }

            scm {
                url project.ext.gitUrl
            }
        }
    }
}

gradleLint {
    rules = ['all-dependency']
    alwaysRun = false
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "michaelruocco"
        property "sonar.projectKey", "michaelruocco_${name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.rootDir}/code-coverage-report/build/reports/jacoco/unitCoverage/unitCoverage.xml,${project.rootDir}/code-coverage-report/build/reports/jacoco/integrationCoverage/integrationCoverage.xml"
    }
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ["alpha", "beta", "rc", "cr", "m", "preview"].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject("Release candidate")
            }
        }
    }
}

nexusPublishing {
    packageGroup = "com.github.michaelruocco"
    repositories {
        sonatype {
            username = System.getenv("OSSRH_USERNAME")
            password = System.getenv("OSSRH_PASSWORD")
        }
    }
}

docker {
    registryCredentials {
        username.set(System.getenv("DOCKER_USERNAME"))
        password.set(System.getenv("DOCKER_PASSWORD"))
    }
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

task buildImage(type: DockerBuildImage) {
    inputDir.set(file("."))
    images.add("michaelruocco/${project.name}:${version}")
}

task pushImage(type: DockerPushImage) {
    images.set(buildImage.images)
}